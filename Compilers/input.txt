# Привет!
# Это демонстрационный файлик, описывающий 
# правила нашего с тобой языка полиномов.
# Язык чрезвычайно простой. Любую строку он пытается
# подогнать под полином исходя из грамматики. И если
# таковое не выходит - пытается найти переменную с
# таким именем. Если и переменной такой нет - генерируется 
# ошибка, с указанием места ошибки
# (это самое кривое, что я сделал, так что
# определение места ошибки тоже протестируй).
# Полиномы как в школьной математики, все буквы английского алфавита, с целыми коэффицентами
# и целыми степенями.
# Кратко правила: 
#    1) Разделитель - <;>, им должна заканчиваться любая операция
#    2) Объявление переменной: $<строка>; или $<строка> = полином;
#    3) Как ты наверное уже догадалась, комментарий: <#>.  
#       сделал только однострочный. 
#    4) С переменными в принципе можно делать все что угодно в 
#       рамках операций + - *. Степень не делал, чтобы не отлавливать
#       семантические ошибки :)
#    5) Вывод на экран: print <полином/переменная/выражение из полиномов или переменных или смешанные>
#    Вот вроде и все. Воображение у тебя хорошее, поэтому постарайся уничтожить этот быдлокод по максимуму :)
# Потести еще всякие заковыристые арифметические выражения, именно на них у меня был тот баг, который я не смог воспроизвести
# Вроде по ощущениям ошибок должно быть не так много. Но скорее всего это обманчиво)
# Снизу небольшой пример правильного файла. И ты в любой момент можешь посмотреть грамматику в .у файле

$kek = 2;             # Объявление и инициализация
$lel;                 # Просто объявление, в котором по умолчанию присваивается пустой полином (как глобальные переменные в С)
lel = y;              # Поздняя инициализация lel
lel = lel * kek * 2z; # Смешанное выражение из переменных и полиномов
print lel;            # Вывод на экран переменной
print 4 * 5;          # Вывод на экран полинома без букв
print lel + 1488zzz   # Должно сработать приведение множителей ну и пример принта смешанного выражения

